(include "structure/layouts/left_widgets.yuck")
(include "structure/layouts/center_widgets.yuck")
(include "structure/layouts/right_widgets.yuck")
(include "structure/variables.yuck")

(defvar wifiStatus "enabled") ; TODO UPDATE THIS VALUE ON STARTUP

(defvar iconSpacing 9)

(deflisten workspacesYuck
  :initial ""
  `~/.config/eww/bar/structure/scripts/generate_workspaces.sh`
)

(defwindow leftBar
  :monitor 0
  :geometry (geometry
    :x "0px"
    :y "0px"
    :anchor "top left"
  )
  :reserve (struts :distance "80px" :side "top")
  :stacking "fg"
  :wm-ignore true
  
  (leftBar)
)

(defwindow centerBar
  :monitor 0
  :geometry (geometry
    :x "0px"
    :y "0px"
    :anchor "top center"
  )
  :reserve (struts :distance "80px" :side "top")
  :stacking "fg"
  :wm-ignore true
  :class "none"
  
  (literal :content workspacesYuck)
  ; (centerBar)
)

(defwindow rightBar
  :monitor 0
  :geometry (geometry
    :x "0px"
    :y "0px"
    :anchor "top right"
  )
  :reserve (struts :distance "80px" :side "top")
  :stacking "fg"
  :wm-ignore true
  
  (rightBar)
)

(defwindow bar
  :geometry (geometry
    ; :x "0px"
    :y "15px"
    :width "100%"
    :height "11px"
    :anchor "top center"
  )
  :stacking "fg"
  :reserve (struts :distance "40px" :side "top")
  :wm-ignore true
  :focusable true
  
  ; "${activeWorkspace}"
  ; "${replace(activeWorkspace,'.* = ','')}"
  ; "${replace(workspaces,'.* = ','')}"
  ; (literal :content workspacesYuck)
  
  (centerbox
    :orientation "h"
    
    (box
      :orientation "h"
      :halign "start"
      :spacing iconSpacing
      
      (literal :content workspacesYuck)
      
      (button
        :onclick "~/.config/eww/bar/structure/scripts/set_wifi.sh ${wifiStatus == 'enabled' ? 'off' : 'on'} ."
        :timeout "3s"
        "wifi ${wifiStatus}"
      )
      
      (button "bluetooth")
      (button "layout")
    )
    
    (musicControls)
    ; (box :orientation "h"
      ;   (label :text "")
      ;   (button :onclick `playerctl play-pause` "test")
      ;   (label :text "")
    ; )
    "right"
  )
)
